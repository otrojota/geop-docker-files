# docker stack ps geoportal
# docker stack deploy --compose-file docker-compose.yml --with-registry-auth geoportal
#
# docker container ls
# docker service logs geoportal_wordpress
# docker service ps --no-trunc geoportal_mysql (para ver errores de servicios que no parten)
# journalctl -u docker.service | tail -n 50 (para ver otros errores)
# docker service scale geoportal_nginx=1
#
#

version: '3.7'
services:
  ###
  ### gfs4-downloader
  gfs4-downloader:
    image: "otrojota/geoportal:gfs4-0.27"
    volumes:
      - type: bind
        source: /var/geoportal/gfs4/data
        target: /home/data
      - type: bind
        source: /var/geoportal/gfs4/publish
        target: /home/publish
    environment:
      DOWNLOADER: "true"
    deploy:
        mode: replicated
        replicas: 1
        restart_policy:
          condition: on-failure
  ###
  ### gfs4-server: EXPOSE 8181
  gfs4-server:
    image: "otrojota/geoportal:gfs4-0.27"
    volumes:
      - type: bind
        source: /var/geoportal/gfs4/data
        target: /home/data
      - type: bind
        source: /var/geoportal/gfs4/publish
        target: /home/publish
    deploy:
        mode: replicated
        replicas: 4
        restart_policy:
          condition: on-failure
  ###
  ### ww3-downloader
  ww3-downloader:
    image: "otrojota/geoportal:ww3-0.18"
    volumes:
      - type: bind
        source: /var/geoportal/ww3/data
        target: /home/data
      - type: bind
        source: /var/geoportal/ww3/publish
        target: /home/publish
    environment:
      DOWNLOADER: "true"
    deploy:
        mode: replicated
        replicas: 1
        restart_policy:
          condition: on-failure
  ###
  ### ww3-server: EXPOSE 8187
  ww3-server:
    image: "otrojota/geoportal:ww3-0.18"
    volumes:
      - type: bind
        source: /var/geoportal/ww3/data
        target: /home/data
      - type: bind
        source: /var/geoportal/ww3/publish
        target: /home/publish
    deploy:
        mode: replicated
        replicas: 4
        restart_policy:
          condition: on-failure
  ###
  ### copernicus-downloader
  copernicus-downloader:
    image: "otrojota/geoportal:copernicus-0.17"
    volumes:
      - type: bind
        source: /var/geoportal/copernicus/data
        target: /home/data
      - type: bind
        source: /var/geoportal/copernicus/publish
        target: /home/publish
    environment:
      DOWNLOADER: "true"
    deploy:
        mode: replicated
        replicas: 1
        restart_policy:
          condition: on-failure
  ###
  ### copernicus-server: EXPOSE 8189
  copernicus-server:
    image: "otrojota/geoportal:copernicus-0.17"
    volumes:
      - type: bind
        source: /var/geoportal/copernicus/data
        target: /home/data
      - type: bind
        source: /var/geoportal/copernicus/publish
        target: /home/publish
    deploy:
        mode: replicated
        replicas: 3
        restart_policy:
          condition: on-failure
  ###
  ### mongo
  mongo:
    image: "mongo:4.2.3-bionic"
    volumes:
      - type: bind
        source: /var/geoportal/mongoData
        target: /data/db
    deploy:
        mode: replicated
        replicas: 1
        placement:
          constraints: [node.role == manager]
        restart_policy:
            condition: on-failure
        resources:
            reservations:
                memory: 512M
            limits:
                memory: 4096M
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: pomeo
  ###
  ### servimet-downloader: EXPOSE 8183
  servimet-downloader:
        image: "otrojota/geoportal:servimet-0.21"
        deploy:
            mode: replicated
            replicas: 1
            restart_policy:
                condition: on-failure
        environment:
            MONGO_URL: "mongodb://root:pomeo@mongo:27017"
            MONGO_DATABASE: "servimet"
            DOWNLOADER: "true"
  ###
  ### huinay-downloader: EXPOSE 8186
  huinay-downloader:
    image: "otrojota/geoportal:huinay-0.16"
    deploy:
        mode: replicated
        replicas: 1
        restart_policy:
            condition: on-failure
    environment:
        MONGO_URL: "mongodb://root:pomeo@mongo:27017"
        MONGO_DATABASE: "huinay"
        DOWNLOADER: "true"
  ###
  ### capas-fijas: EXPOSE 8184
  capas-fijas:
    image: "otrojota/geoportal:capas-fijas-0.20"
    volumes:
      - type: bind
        source: /var/geoportal/fixed
        target: /home/data
      - type: bind
        source: /var/geoportal/fixed/publish
        target: /home/publish
    deploy:
        mode: replicated
        replicas: 2
        restart_policy:
          condition: on-failure
  ###
  ### bcn-server: EXPOSE 8188
  bcn-server:
    image: "otrojota/geoportal:bcn-0.10"
    deploy:
        mode: replicated
        replicas: 1
        restart_policy:
          condition: on-failure
  ###
  ### web-server: EXPOSE 8180
  web-server:
    image: "otrojota/geoportal:web-server-0.43"
    deploy:
        mode: replicated
        replicas: 2
        restart_policy:
          condition: on-failure
    environment:
        MONGO_URL: "mongodb://root:pomeo@mongo:27017"
        MONGO_DATABASE: "geoportal"
  ###
  ### wordpress
  wordpress:
    image: wordpress:php7.2-fpm
    restart: always    
    #ports:
    #  - 8120:9000
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: geoportal
      WORDPRESS_DB_PASSWORD: portalgeo
      WORDPRESS_DB_NAME: wordressdb
    volumes:
      - type: bind
        source: /var/geoportal/wordpress/html
        target: /var/www/html
  ##
  ## mysql (usada por wordpress)
  mysql:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: wordressdb
      MYSQL_USER: geoportal
      MYSQL_PASSWORD: portalgeo
      MYSQL_RANDOM_ROOT_PASSWORD: '1'
    volumes:
      - type: bind
        source: /var/geoportal/mysql
        target: /var/lib/mysql
  ###
  ### nginx
  nginx:
    ports:
      - "8082:8082"
      - "8083:8083"
    image: "nginx:latest"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
          condition: on-failure
    volumes:
      - type: bind
        source: /opt/geoportal/nginx
        target: /etc/nginx/conf.d

          